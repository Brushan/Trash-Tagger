{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/carl.orre/trash/Trash/client/App.js\";\nimport 'react-native-gesture-handler';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Container from \"./components/Container/Container\";\nimport LoginContainer from \"./components/LoginContainer/LoginContainer\";\nexport default function App() {\n  var Stack = createStackNavigator();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoggedIn = _useState2[0],\n      setIsLoggedIn = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, isLoggedIn ? React.createElement(Stack.Screen, {\n    name: \"Trashtagger\",\n    options: {\n      headerShown: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, function (props) {\n    return React.createElement(Container, _extends({}, props, {\n      user: user,\n      setIsLoggedIn: setIsLoggedIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 23\n      }\n    }));\n  }) : React.createElement(Stack.Screen, {\n    name: \"TrashTagger\",\n    options: {\n      headerShown: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, function (props) {\n    return React.createElement(LoginContainer, _extends({}, props, {\n      setIsLoggedIn: setIsLoggedIn,\n      setUser: setUser,\n      user: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 23\n      }\n    }));\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/carl.orre/trash/Trash/client/App.js"],"names":["React","useState","createStackNavigator","NavigationContainer","Container","LoginContainer","App","Stack","isLoggedIn","setIsLoggedIn","user","setUser","headerShown","props","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;AAEA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,SAAP;AACA,OAAOC,cAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAE5B,MAAMC,KAAK,GAAGL,oBAAoB,EAAlC;;AAF4B,kBAGQD,QAAQ,CAAC,KAAD,CAHhB;AAAA;AAAA,MAGrBO,UAHqB;AAAA,MAGTC,aAHS;;AAAA,mBAIJR,QAAQ,CAAC,EAAD,CAJJ;AAAA;AAAA,MAIrBS,IAJqB;AAAA,MAIfC,OAJe;;AAM5B,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,UAAU,GACX,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,OAAO,EACL;AACEI,MAAAA,WAAW,EAAE;AADf,KAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG,UAACC,KAAD;AAAA,WAAW,oBAAC,SAAD,eAAeA,KAAf;AAAsB,MAAA,IAAI,EAAEH,IAA5B;AAAkC,MAAA,aAAa,EAAED,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAX;AAAA,GARH,CADW,GAYX,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,OAAO,EACL;AACEG,MAAAA,WAAW,EAAE;AADf,KAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG,UAACC,KAAD;AAAA,WAAW,oBAAC,cAAD,eAAoBA,KAApB;AAA2B,MAAA,aAAa,EAAEJ,aAA1C;AAAyD,MAAA,OAAO,EAAEE,OAAlE;AAA2E,MAAA,IAAI,EAAED,IAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAX;AAAA,GARH,CAbF,CADF,CADF;AA6BD;AAED,IAAMI,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import 'react-native-gesture-handler';\nimport React, {useState} from 'react';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Container from './components/Container/Container';\nimport LoginContainer from './components/LoginContainer/LoginContainer';\n\nexport default function App() {\n\n  const Stack = createStackNavigator(); \n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [user, setUser] = useState('')\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        {isLoggedIn ? \n        <Stack.Screen \n          name=\"Trashtagger\"\n          options={\n            {\n              headerShown: false\n            }\n          }\n        >\n          {(props) => <Container {...props} user={user} setIsLoggedIn={setIsLoggedIn}/>}\n        </Stack.Screen>\n        :\n        <Stack.Screen \n          name=\"TrashTagger\"\n          options={\n            {\n              headerShown: false\n            }\n          }\n        >\n          {(props) => <LoginContainer {...props} setIsLoggedIn={setIsLoggedIn} setUser={setUser} user={user}/>}\n        </Stack.Screen>\n        }\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}