{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/carl.orre/trash/Trash/client/components/Login/Login.jsx\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Button } from 'react-native-elements';\nimport Axios from 'axios';\nimport { getCurrentUserAsync } from 'expo-google-sign-in';\n\nfunction Login(_ref) {\n  var setIsLoggedIn = _ref.setIsLoggedIn,\n      setUser = _ref.setUser,\n      user = _ref.user,\n      navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var onLogin = function onLogin() {\n    Axios.get(\"https://us-central1-trash-2b5de.cloudfunctions.net/app/api/users/\" + user).then(function (res) {\n      if (res.data[0].password === password) {\n        setIsLoggedIn(true);\n      } else {\n        Alert.alert('Wrong Entry', 'Password or Username Invalid', [{\n          text: 'Ok'\n        }]);\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"#Trash Tagger\"), React.createElement(TextInput, {\n    value: user,\n    onChangeText: function onChangeText(username) {\n      return setUser(username);\n    },\n    placeholder: 'Username',\n    style: styles.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    value: password,\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    placeholder: 'Password',\n    secureTextEntry: true,\n    style: styles.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: onLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.backbtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Login\")), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      return navigation.navigate('RegisterUser');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.backbtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Register\")));\n}\n\nvar styles = StyleSheet.create({\n  button: {\n    elevation: 8,\n    borderRadius: 25,\n    paddingVertical: 10,\n    paddingHorizontal: 12,\n    backgroundColor: '#41bdb0',\n    height: 45,\n    width: '80%',\n    marginTop: 20,\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.87,\n    shadowRadius: 0.65\n  },\n  backbtn: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold',\n    alignSelf: 'center',\n    textTransform: 'uppercase'\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ecf0f1'\n  },\n  input: {\n    width: '75%',\n    height: 44,\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: 'gray',\n    marginBottom: 20\n  },\n  header: {\n    fontSize: 40,\n    fontWeight: \"bold\",\n    marginBottom: 100\n  }\n});\nexport default Login;","map":{"version":3,"sources":["/Users/carl.orre/trash/Trash/client/components/Login/Login.jsx"],"names":["React","useState","Button","Axios","getCurrentUserAsync","Login","setIsLoggedIn","setUser","user","navigation","password","setPassword","onLogin","get","then","res","data","Alert","alert","text","styles","container","header","username","input","button","backbtn","navigate","StyleSheet","create","elevation","borderRadius","paddingVertical","paddingHorizontal","backgroundColor","height","width","marginTop","shadowOffset","shadowOpacity","shadowRadius","color","fontSize","fontWeight","alignSelf","textTransform","flex","alignItems","justifyContent","padding","borderBottomWidth","borderBottomColor","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { View, TextInput, StyleSheet, Text, Alert, TouchableOpacity } from 'react-native';\nimport { Button } from 'react-native-elements'\nimport Axios from 'axios';\nimport { getCurrentUserAsync } from 'expo-google-sign-in';\n\n\nfunction Login( {setIsLoggedIn, setUser, user, navigation} ) {\n\n  const [ password, setPassword ] = useState('')\n\n\nconst onLogin = () => {\n  Axios.get(`https://us-central1-trash-2b5de.cloudfunctions.net/app/api/users/${user}`)\n  .then(res => {\n    if (res.data[0].password === password) {\n      setIsLoggedIn(true)\n      } else {\n        Alert.alert(\n          'Wrong Entry',\n          'Password or Username Invalid',\n          [\n            {\n              text: 'Ok',\n            }\n          ]\n        )\n      }\n    }\n  )\n} \n  \n  \n  \n  \n  \n  \n  return (\n    <View style={styles.container}>\n        <Text style={styles.header}>#Trash Tagger</Text>\n        <TextInput\n          value={user}\n          onChangeText={(username)=> setUser(username)}\n          placeholder={'Username'}\n          style={styles.input} />\n        <TextInput\n          value={password}\n          onChangeText={(password) => setPassword(password)}\n          placeholder={'Password'}\n          secureTextEntry={true}\n          style={styles.input}\n          />\n\n          <TouchableOpacity \n            style={styles.button}\n            onPress={onLogin}  \n          >\n            <Text style={styles.backbtn}>Login</Text> \n          </TouchableOpacity>\n\n          <TouchableOpacity\n            style={styles.button}\n            onPress={() => navigation.navigate('RegisterUser')}\n          >\n            <Text style={styles.backbtn}>Register</Text> \n          </TouchableOpacity>\n  </View>\n  )\n}\nconst styles = StyleSheet.create({\n  button: {\n    elevation: 8,\n    borderRadius: 25,\n    paddingVertical: 10,\n    paddingHorizontal: 12,\n    backgroundColor: '#41bdb0',\n    height: 45,\n    width: '80%',\n    marginTop: 20,\n    shadowOffset: {\n      width: 0,\n      height: 1,\n      },\n      shadowOpacity: 0.87,\n      shadowRadius: 0.65,\n},\n  backbtn: {\n\n    \n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold',\n    alignSelf: 'center',\n    textTransform: 'uppercase',\n    \n},\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#ecf0f1',\n  },\n  input: {\n    width: '75%',\n    height: 44,\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: 'gray',\n    marginBottom: 20,\n    \n  },\n  header: {\n    fontSize: 40,\n    fontWeight: \"bold\",\n    marginBottom: 100\n\n  }\n  });\nexport default Login\n"]},"metadata":{},"sourceType":"module"}