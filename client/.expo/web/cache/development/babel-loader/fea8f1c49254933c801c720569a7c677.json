{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/carl.orre/trash/Trash/client/components/Map/Map.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport MapView, { Marker, Callout } from 'react-native-maps';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport axios from 'axios';\nimport firebase from \"../../firebase.js\";\nimport 'firebase/firestore';\n\nvar Map = function Map(_ref) {\n  var user = _ref.user;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      locations = _useState2[0],\n      setLocations = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalVisible = _useState4[0],\n      setModalVisible = _useState4[1];\n\n  useEffect(function () {\n    var data = [];\n    firebase.firestore().collection(\"locations\").onSnapshot(function (snapshot) {\n      axios.get('https://us-central1-trash-2b5de.cloudfunctions.net/app/api/locations').then(function (data) {\n        return setLocations(data.data);\n      }).catch(function (e) {\n        return console.log(e);\n      });\n    });\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(MapView, {\n    style: styles.mapStyle,\n    provider: \"google\",\n    region: {\n      latitude: 59.3293,\n      longitude: 18.0686,\n      latitudeDelta: 0.0922,\n      longitudeDelta: 0.0421\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, locations.map(function (location) {\n    return React.createElement(View, {\n      key: location.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, React.createElement(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        Alert.alert(\"Modal has been closed.\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.centeredView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.modalView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.modalText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }), React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 23\n      }\n    }, \"Upload by \", location.user), React.createElement(Image, {\n      style: {\n        height: 300,\n        width: 250\n      },\n      source: {\n        uri: location.uri\n      },\n      resizeMode: \"contain\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 23\n      }\n    }), React.createElement(TouchableHighlight, {\n      style: _objectSpread({}, styles.openButton),\n      onPress: function onPress() {\n        setModalVisible(!modalVisible);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: styles.textStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }, \"X\")), React.createElement(TouchableHighlight, {\n      style: {\n        backgroundColor: '#148744',\n        height: 45,\n        width: 120,\n        alignItems: 'center',\n        borderRadius: 10,\n        justifyContent: 'center',\n        marginTop: 20\n      },\n      onPress: function _callee() {\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(axios({\n                  method: 'PUT',\n                  url: \"https://us-central1-trash-2b5de.cloudfunctions.net/app/api/locations/\" + location.id,\n                  data: {\n                    id: location.id,\n                    completed: true\n                  }\n                }));\n\n              case 2:\n                _context.next = 4;\n                return _regeneratorRuntime.awrap(axios.get(\"https://us-central1-trash-2b5de.cloudfunctions.net/app/api/users/\" + user).then(function (res) {\n                  return axios({\n                    method: 'PUT',\n                    url: \"https://us-central1-trash-2b5de.cloudfunctions.net/app/api/users/\" + user,\n                    data: {\n                      karmaPoints: res.data[0].karmaPoints + 10\n                    }\n                  });\n                }));\n\n              case 4:\n                setModalVisible(false);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }, React.createElement(Text, {\n      style: {\n        alignSelf: 'center',\n        color: 'white',\n        fontSize: 18\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 27\n      }\n    }, \"Task Done\"))))), location.completed ? React.createElement(Marker, {\n      onPress: function onPress() {\n        return setModalVisible(true);\n      },\n      pinColor: '#148744',\n      key: location.id,\n      coordinate: {\n        latitude: location.lat,\n        longitude: location.long\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 34\n      }\n    }) : React.createElement(Marker, {\n      onPress: function onPress() {\n        return setModalVisible(true);\n      },\n      pinColor: '#D65F56',\n      key: location.id,\n      coordinate: {\n        latitude: location.lat,\n        longitude: location.long\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 24\n      }\n    }));\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    marginTop: 40,\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  mapStyle: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n    width: '90%',\n    height: '80%'\n  },\n  openButton: {\n    backgroundColor: '#D65F56',\n    borderRadius: 30,\n    padding: 15,\n    elevation: 2,\n    position: 'absolute',\n    right: 10,\n    top: 10\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\nexport default Map;","map":{"version":3,"sources":["/Users/carl.orre/trash/Trash/client/components/Map/Map.jsx"],"names":["React","useState","useEffect","MapView","Marker","Callout","axios","firebase","Map","user","locations","setLocations","modalVisible","setModalVisible","data","firestore","collection","onSnapshot","snapshot","get","then","catch","e","console","log","styles","container","mapStyle","latitude","longitude","latitudeDelta","longitudeDelta","map","location","id","Alert","alert","centeredView","modalView","modalText","height","width","uri","openButton","textStyle","backgroundColor","alignItems","borderRadius","justifyContent","marginTop","method","url","completed","res","karmaPoints","alignSelf","color","fontSize","lat","long","StyleSheet","create","flex","Dimensions","margin","padding","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","position","right","top","fontWeight","textAlign","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MapView, { Marker, Callout } from 'react-native-maps';\nimport { StyleSheet, Text, View, Dimensions, Modal, Image, TouchableHighlight } from 'react-native';\nimport axios from 'axios';\nimport firebase from '../../firebase.js';\nimport 'firebase/firestore';\n\nconst Map = ({user}) => {\nconst [locations, setLocations] = useState([])\nconst [modalVisible, setModalVisible] = useState(false);\n\nuseEffect(() => {\n  let data = [];\n  firebase\n    .firestore()\n    .collection(\"locations\")\n    .onSnapshot((snapshot) => {\n      axios.get('https://us-central1-trash-2b5de.cloudfunctions.net/app/api/locations')\n    .then(data => setLocations(data.data))\n    .catch(e => console.log(e));\n    });\n}, []);\n  return (\n    <View style={styles.container}>\n        <MapView style={styles.mapStyle} provider={\"google\"} region={{\n          latitude: 59.3293,\n          longitude: 18.0686,\n          latitudeDelta: 0.0922,\n          longitudeDelta: 0.0421\n        }}>\n         {locations.map((location) => (\n          <View key={location.id}>\n            <Modal\n            animationType=\"slide\"\n            transparent={true}\n            visible={modalVisible}\n            onRequestClose={()=>{\n                Alert.alert(\"Modal has been closed.\")\n            }}\n            >\n                <View style={styles.centeredView}>\n                    <View style={styles.modalView}>\n                    <Text style={styles.modalText}>{}</Text>\n                      <Text>Upload by {location.user}</Text>\n                      <Image style={{ height: 300, width: 250 }} source={{ uri: location.uri }} resizeMode=\"contain\" />\n                     \n                        <TouchableHighlight style={{...styles.openButton}} onPress={()=>{\n                            setModalVisible(!modalVisible);\n                        }}>\n                            <Text style={styles.textStyle}>X</Text>\n                        </TouchableHighlight>\n                        \n                        <TouchableHighlight style={{\n                          backgroundColor: '#148744', \n                          height: 45, \n                          width: 120, \n                          alignItems: 'center',\n                          borderRadius: 10,\n                          justifyContent: 'center',\n                          marginTop: 20\n                          }} onPress={async () => {\n                            await axios({\n                              method: 'PUT',\n                              url: `https://us-central1-trash-2b5de.cloudfunctions.net/app/api/locations/${location.id}`,\n                              data: {\n                                id: location.id,\n                                completed: true\n                              }\n                            })\n                            await axios.get(`https://us-central1-trash-2b5de.cloudfunctions.net/app/api/users/${user}`)\n                             .then(res => axios({\n                               method: 'PUT',\n                               url: `https://us-central1-trash-2b5de.cloudfunctions.net/app/api/users/${user}`,\n                               data: {\n                                 karmaPoints: res.data[0].karmaPoints + 10,\n                               }\n                             }))\n                            setModalVisible(false)\n                          }}>\n                          <Text style={{\n                            alignSelf: 'center',\n                            color: 'white',\n                            fontSize: 18,\n                          }}>Task Done</Text>\n                        </TouchableHighlight>\n                    </View>\n                </View>\n            </Modal>\n           {location.completed ? <Marker onPress={() => setModalVisible(true)} pinColor={'#148744'} key={location.id} coordinate={{ latitude: location.lat, longitude: location.long }}>\n           </Marker> : <Marker onPress={() => setModalVisible(true)} pinColor={'#D65F56'} key={location.id} coordinate={{ latitude: location.lat, longitude: location.long }}>\n           </Marker>}\n           </View>\n         ))}\n      </MapView>\n      </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: 40,\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  mapStyle: {\n    width: Dimensions.get('window').width,\n    height: Dimensions.get('window').height,\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22,\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n    width: '90%',\n    height: '80%'\n  },\n  openButton: {\n    backgroundColor: '#D65F56',\n    borderRadius: 30,\n    padding: 15,\n    elevation: 2,\n    position: 'absolute',\n    right: 10,\n    top: 10,\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\nexport default Map\n"]},"metadata":{},"sourceType":"module"}